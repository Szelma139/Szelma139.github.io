---
title: Threads in c++/ QT
layout: post
date: '2019-01-10 17:27:00 +0100'
categories: c thread QT
---

It is always worth to have some kind of preview how to properly use Threads in c++/Qt. There are several ways of doing that, but which one is proper, probably one working.. But is it ?

So first it is good to define new class, not containing QThread, and extending interface of QObject - normally class is extending QThread - like it is done in java.
Next I am creating method expecting reference object to Thread.

```
void classname::doSetup(QThread & thread)
{
connect(&thread, SIGNAL(started(),this, SLOT(doWork());
}

```
Method above will take thread object, prepare it and will start doing internal job after starting thread. Almost same as in java, but in signal-slotish way. Yes doWork does it's work. 
```
QThread thread;
MyObject object;
object.doSetup(thread);
object.moveToThread(&thread)   - reference to existing object
thread.start();
```
Way of doing it stolen from Youtube user - VoidRealms.


See ya'll.
