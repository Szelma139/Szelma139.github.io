<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-01-10T11:43:50+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><author><name>GitHub User</name></author><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2020/01/09/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-01-09T23:40:09+01:00</published><updated>2020-01-09T23:40:09+01:00</updated><id>http://localhost:4000/jekyll/update/2020/01/09/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/01/09/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>GitHub User</name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">React - CSS w JS</title><link href="http://localhost:4000/react/app/web/2019/12/03/welcome-to-jekyll-2.html" rel="alternate" type="text/html" title="React - CSS w JS" /><published>2019-12-03T17:27:00+01:00</published><updated>2019-12-03T17:27:00+01:00</updated><id>http://localhost:4000/react/app/web/2019/12/03/welcome-to-jekyll%202</id><content type="html" xml:base="http://localhost:4000/react/app/web/2019/12/03/welcome-to-jekyll-2.html">&lt;p&gt;Zdałem sobie sprawę żę warto opisać kilka prostych sposobów dołączania stylów CSS w reactie. Piszę to głównie żeby nie zapomnieć, jako że znalezienie odpowiednich informacji w Dokumentacji Reacta jest strasznie kłopotliwa. No to zaczynamy, wpis będzie krótki.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var style = {
  backgroundColor: &quot;white&quot;,
  borderTop: &quot;1px solid #E7E7E7&quot;,
  textAlign: &quot;center&quot;,
  padding: &quot;20px&quot;,
  position: &quot;relative&quot;,
  left: &quot;0&quot;,
  bottom: &quot;0&quot;,
  height: &quot;10%&quot;,
  width: &quot;100%&quot;,
  paddingTop: &quot;30vh&quot;,
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Natomiast samo przypisanie zmiennej do komponentu, odbywa się poprzez atrybut elementu style. W sposób poniżej:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;footer style={style } className=&quot;gradient&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Analogicznie jednak nadal możliwe jest dodanie zwykłej klasy do elementu poprzez className (to jednak React class tutaj jest zarezerwowanym słowem kluczowym). Wykonanie importu w wersji skróconej:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Import './Footer.css';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inny sposób bierze pod uwagę inline styles, czyli tak jak poprzednio w miejsce “style” wrzuca się javascriptowe wersje identyfikatorów CSS-a.&lt;/p&gt;

&lt;p&gt;To by było na tyle.&lt;/p&gt;</content><author><name>GitHub User</name></author><summary type="html">Zdałem sobie sprawę żę warto opisać kilka prostych sposobów dołączania stylów CSS w reactie. Piszę to głównie żeby nie zapomnieć, jako że znalezienie odpowiednich informacji w Dokumentacji Reacta jest strasznie kłopotliwa. No to zaczynamy, wpis będzie krótki.</summary></entry><entry><title type="html">Jekyll i kilka ważnych ważności.. [komend]</title><link href="http://localhost:4000/jekyll/update/commands/2019/12/03/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Jekyll i kilka ważnych ważności.. [komend]" /><published>2019-12-03T17:27:00+01:00</published><updated>2019-12-03T17:27:00+01:00</updated><id>http://localhost:4000/jekyll/update/commands/2019/12/03/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/commands/2019/12/03/welcome-to-jekyll.html">&lt;p&gt;Dobrze jest mieć gdzieś pod ręką konkretną konfigurację dla jekylla, więc może na samym serwisie blogowym byłoby jej najlepsze miejsce, w końcu wtedy nie trzeba szukać prawda? No to poniżej kilka ważnych elementów.&lt;/p&gt;

&lt;p&gt;Aktualizuje zmiany w konfiguracji:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pozwoli odpalić lokalny serwer:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll exec bundle serv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kod:
&lt;code class=&quot;highlighter-rouge&quot;&gt;gem 'jekyll-admin', group: :jekyll_plugins&lt;/code&gt;
dodany do gemfile:  pozwoli używać panelu administratora.&lt;/p&gt;

&lt;p&gt;Layout zapisuje się w _layouts i właśnie stąd Jekyll czerpie szablony.&lt;/p&gt;</content><author><name>GitHub User</name></author><summary type="html">Dobrze jest mieć gdzieś pod ręką konkretną konfigurację dla jekylla, więc może na samym serwisie blogowym byłoby jej najlepsze miejsce, w końcu wtedy nie trzeba szukać prawda? No to poniżej kilka ważnych elementów.</summary></entry></feed>